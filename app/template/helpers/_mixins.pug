mixin genLogo(parent)
  a(class=`${prefix}-logo ${prefix}-${parent}__logo` href=company.logo.url title=company.logo.urlTitle)
    picture(class=`${prefix}-logo__pic`)
      source(type='image/webp' srcset=`/img/${company.logo.fileName}.webp`)
      img(class=`${prefix}-logo__img` alt=alt src=`/img/${company.logo.fileName}.png`)

mixin genMeta(name, content)
  meta(name=name content=content)

mixin genLink(file, rel)
  if(rel === 'shortcut icon')
    link(href='/img/' + file, rel=rel)
  else if(rel === 'stylesheet')
    link(href='/css/' + file + '.css', rel=rel)

mixin genScript(file)
  script(src="/js/" + file + ".js")

mixin genIconMenu(menu, parent, target)
  ul(class=`${prefix}-list ${parent}__list`)
    for val in menu
      li(class=`${prefix}-list__item`)
        a(href=val.url title=val.urlTitle target=target class=`${prefix}-list__link`)
          span(class=`${prefix}-list__icon ${prefix}-list__icon--${val.postfix}`)


mixin genMainMenu(menu, parent, isNav = false, isHeader = false)
  if isNav
    nav(class=`${prefix}-menu ${prefix}-${parent}__menu`)
      span(class=`${prefix}-menu__line`)
      if isHeader
        button(class=`${prefix}-menu-burger ${prefix}-menu__burger js-burger` aria-label='Close menu')
          span(class=`${prefix}-menu-burger__line`)
      ul(class=`${prefix}-menu-list ${prefix}-menu__list js-toggle-by-burger`)
        for val in menu
          li(class=`${prefix}-menu-list__item`)
            a(href=val.url title=val.urlTitle class=`${prefix}-menu-list-link ${prefix}-menu-list__link`)
              span(class=`${prefix}-menu-list-link__text`)= val.title
  else
    ul(class=`${prefix}-menu-list ${prefix}-${parent}__list`)
      for val in menu
        li(class=`${prefix}-menu-list__item`)
          a(href=val.url title=val.urlTitle class=`${prefix}-menu-list-link ${prefix}-menu-list__link`)
            span(class=`${prefix}-menu-list-link__text`)= val.title

mixin genTitle(type, parent, text, isInvert = false)
  if type === 'main'
    h1(class=`${prefix}-title ${(isInvert) ? `${prefix}-title--is-inverted` : ``} ${prefix}-title--is-primary ${prefix}-${parent}__title ${prefix}-${parent}__title--is-primary`)
      span(class=`${prefix}-title__text`)= text
  else if type === 'sec'
    h2(class=`${prefix}-title ${(isInvert) ? `${prefix}-title--is-inverted` : ``} ${prefix}-title--is-sec ${prefix}-${parent}__title ${prefix}-${parent}__title--is-sec`)
      span(class=`${prefix}-title__text`)= text
  else if type === 'thd'
    h3(class=`${prefix}-title ${(isInvert) ? `${prefix}-title--is-inverted` : ``} ${prefix}-title--is-thd ${prefix}-${parent}__title ${prefix}-${parent}__title--is-thd`)
      span(class=`${prefix}-title__text`)= text
  else
    h4(class=`${prefix}-title ${(isInvert) ? `${prefix}-title--is-inverted` : ``} ${prefix}-title--is-other ${prefix}-${parent}__title ${prefix}-${parent}__title--is-other`)
      span(class=`${prefix}-title__text`)= text

mixin genInput(type='', name='', title='', isChecked=false, isRequired=true, parent=`contacts-form`)
    fieldset(class=`${prefix}-${parent}-field ${prefix}-${parent}__field`)
      if isChecked
        div(class=`${prefix}-${parent}-field-checkbox ${prefix}-${parent}-field__checkbox'`)
          span(class=`${parent}-field-checkbox__text`)
      label(for=name class=`${prefix}-${parent}-field-title ${prefix}-${parent}-field__title`)
          span(class=`${prefix}-${parent}-field-title__text`)!= title
      if type !== 'textarea'
        input(id=name class=`${prefix}-${parent}-field__input` type=`${type}` name=`${name}` required=`${isRequired}` hidden=`${isChecked}`)
      else
        textarea(id=`${name}` class=`${prefix}-${parent}-field__textarea` name=`${name}` required=`${isRequired}`)
